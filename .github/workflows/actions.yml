name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour installer les dépendances
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

  # Job pour exécuter le linting
  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Run linter
        run: npm run lint

  # Job pour les tests unitaires
  unit-test:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Run unit tests
        run: npm test

  # Job pour le test d'intégration
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Run integration tests
        run: echo "Hello Integration!"

  # Job pour le test E2E
  e2e-test:
    runs-on: ubuntu-latest
    needs: integration-test
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Run E2E tests
        run: echo "Hello E2E !!"

  # Job pour la version
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'release' }}
    name: Release
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Configure Git
        run: |
          git config user.email "${{ secrets.GITHUB_USER_EMAIL }}"
          git config user.name "${{ secrets.GITHUB_USER_NAME }}"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@${{ github.server_url }}/${{ github.repository }}/.git"

      - name: Checkout branch
        run: git checkout main

      - name: Pull latest changes
        run: git pull origin main --rebase

      - name: Run release-it
        run: npx --yes release-it --ci

  # Job pour le déploiement
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'release' }}
    name: Deploy
    needs: [release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Version stable recommandée de Node.js
          cache: 'npm'

      - name: Deploy to production
        run: echo "Deploying to production..."
